name: Deploy backend

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  packages: write
  actions: read

env:
  IMAGE_NAME: "ghcr.io/${{ github.repository }}/backend"

jobs:
  docker_push:
    name: "Build with Docker and push to registry"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build backend with cache and push to registry
        run: |
          cd backend
          docker build \
            --cache-from "$IMAGE_NAME" \
            -t "$IMAGE_NAME:latest" \
            -t "$IMAGE_NAME:${{ github.sha }}" \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            .
          docker push "$IMAGE_NAME" --all-tags
        env:
          DOCKER_BUILDKIT: 1

  deploy:
    name: "Deploy to Azure Container Instances with Terraform"
    runs-on: ubuntu-latest
    needs: [docker_push]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Apply Terraform changes
        run: |
          cd terraform
          terraform init -lockfile=readonly
          terraform apply -auto-approve -lock-timeout=15m
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_vercel_token: ${{ secrets.VERCEL_TOKEN }}
          TF_VAR_auth_secret: ${{ secrets.AUTH_SECRET }}
          TF_VAR_google_client_id: ${{ secrets.GOOGLE_CLIENT_ID }}
          TF_VAR_google_client_secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_backend_image: "${{ env.IMAGE_NAME }}:${{ github.sha }}"
          TF_VAR_environment: "prod"

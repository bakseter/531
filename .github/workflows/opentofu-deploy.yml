name: Deploy backend

on:
  push:
    branches: [master]
    paths:
      ['backend/**', 'opentofu/**', '.github/workflows/opentofu-deploy.yml']

env:
  IMAGE_NAME: 'ghcr.io/${{ github.repository }}/backend'

jobs:
  build-push:
    name: 'Build & push'
    runs-on: ubuntu-latest
    permissions:
      actions: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: 'ghcr.io'
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build backend with cache and push to registry
        uses: docker/build-push-action@v6
        with:
          push: 'true'
          tags: '${{ env.IMAGE_NAME }}:latest,${{ env.IMAGE_NAME}}:${{ github.sha }}'
          cache-from: 'type=registry,ref=${{ env.IMAGE_NAME }}:latest'
          cache-to: 'type=inline'
          context: 'backend'

  trivy-scan-image:
    name: 'Trivy scan image'
    runs-on: ubuntu-latest
    needs: [build-push]
    permissions:
      actions: read
      contents: read
      security-events: write
    env:
      TRIVY_SARIF: 'trivy.sarif'
    steps:
      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.27.0
        with:
          image-ref: '${{ env.IMAGE_NAME }}:${{ github.sha }}'
          format: 'sarif'
          exit-code: '0'
          output: ${{ env.TRIVY_SARIF }}

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ env.TRIVY_SARIF }}
          category: 'Trivy'

  tofu-deploy:
    name: 'OpenTofu deploy'
    runs-on: ubuntu-latest
    needs: [build-push]
    permissions:
      contents: read
    env:
      TF_VAR_revision_suffix: ${{ github.sha }}
    defaults:
      run:
        working-directory: './opentofu'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: OpenTofu initialize
        run: tofu init

      - name: OpenTofu apply
        run: tofu apply -auto-approve
